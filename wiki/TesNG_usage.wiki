=Using PowerMock with TestNG=
Since version 1.3.5 PowerMock has basic support for TestNG.

== How to write tests ==
Just as with the JUnit runners you need to prepare the classes that are normally not mockable by using the `@PrepareForTest` annotation. A full example using the Mockito API extension:

Class under test:
{{{
public void methodToTest() {
   ..
   final long id = IdGenerator.generateNewId();
   ..
}
}}}

The test with TestNG:
{{{
@PrepareForTest(IdGenerator.class)
public class MyTestClass {
    @Test
    public void demoStaticMethodMocking() throws Exception {
	mockStatic(IdGenerator.class);
     
	when(IdGenerator.generateNewId()).thenReturn(2L);		
 
	new ClassUnderTest().methodToTest();
 
	// Optionally verify that the static method was actually called
	verifyStatic();
	IdGenerator.generateNewId();
    }
}
}}}

For this to work you need to tell TestNG to use the PowerMock object factory. There are several ways to achieve this as seen below.

== Using suite.xml ==
In your `suite.xml` add the following in the suite tag:
{{{
object-factory="org.powermock.modules.testng.PowerMockObjectFactory"
}}}

e.g.
{{{
<suite name="dgf" verbose="10" object-factory="org.powermock.modules.testng.PowerMockObjectFactory">
    <test name="dgf">
        <classes>
            <class name="com.mycompany.Test1"/>
            <class name="com.mycompany.Test2"/>
        </classes>
    </test>
</suite>
}}}